Create a pseudo-case-control study from case-parent trios
---------------------------------------------------------

^pseudocc^ ^varlist^  , ^sav^ing^(^filename^)^ [^rep^lace ^p^ed^(^varname^)^ ^i^d^(^varname^)^ 
        ^fa^ther^(^varname^)^ ^mo^ther^(^varname^)^ ^sex(^varname^)^ ^af^fect^(^varname^)^ 
        ^ac^ode^(^numlist^)^ ^mv^ar^(^copylist^)^ ^mg^en ^fv^ar^(^copylist^)^ ^fg^en 
        ^k^eep^(^varlist^)^ ^po^rigin ^ph^ase ^one^ ^th^ree ^ex^ch ^fi^rst ^nowarn^]

where `copylist' is a (blank delimited)  list of elements of the form

	[newvarname =] varname 
 
The command requires an even number of arguments - the variables containing 
the two alleles at a series of loci.

Description
-----------

Given a dataset consisting of affected offspring and their parents, this 
function creates a case-control data set, with affected offspring as "cases" 
and between one and seven  matched pseudo-controls,  The genotypes of which 
are constructed from the parental genotypes. Multiple loci are dealt with but 
the resultant multi-locus genotypes do not always have phase resolved. When 
phase is not resolved, the case-control dataset may only be used for fitting 
models whose predictions will not vary with phase. When phase is resolved 
models which allow haplotype ("cis") effects may be fitted. When, in addition,
parent-of-origin of alleles/haplotypes can be resolved, effects of  this may 
also be modelled. 

No model fitting is done in this program; to do this the user must use 
conditional logistic regression (the ^clogit^ command) on the dataset created 
by ^pseudocc^. For this reason, the ^saving()^ option is not optional.

In the default mode of operation, the number of pseudo-controls created is 
either one (with genotype constructed from the two non-transmitted alleles at
each locus) or three (with genotype constructed from the remaining three 
inherited genotypes possible in addition to that of the "case"). However,
parental genotypes may be defined as "exchangeable", by which it is meant that 
the joint probability of the two parental genotypes in the population is 
unchanged by their being interchanged:

          Pr(Mother=G1, Father=G2) = Pr(Mother=G2, Father=G1)

With this assumption, additional pseudo-controls can be created by 
interchanging maternal and paternal genotypes (so there are either three or 
seven pseudo-controls per case). This only affects analyses which allow for 
parent-of-origin effects and the additional pseudo-controls result in some 
gain in efficiency for such analyses. 

Variables from the parental records may be copied over into the case and
control records. Since these will take the same value for the case and all
pseudo-controls, their effect on risk cannot be estimated in subsequent
conditional logistic regression analysis. However, they may enter the model in
interaction (sometimes called  "effect modification") terms. Similarly, 
variables from the affected offspring record may be preserved and copied over 
into the  pseudo-control records. These can be used in subsequent analysis in 
a similar manner,but it is important to realise that such analyses assume 
independence (in the population) between these variables and the genetic loci 
considered. Similarly, if parental variables are to be used in conjunction 
with the additional pseudo-controls generated by the "parental exchangeability"
assumption, the formal exchangeability assumption described above must remain
true after conditioning upon these variables. That is, we must assume 

    Pr(Mother=G1, Father=G2| Zm, Zf) = Pr(Mother=G2, Father=G1| Zm, Zf)

where Zm and Zf represent the variable(s) carried over from mother and father 
respectively. An example in which we might not wish to make this assumption is
when Zm and Zf measure family history of disease in the maternal and paternal 
lines.

Note that alleles coded as zero are NOT treated as missing. 
Neither are zero pedigree member codes. If you want zero to be treated as
missing, use ^mvdecode^ to recode them. This problem does not occur if you 
read in "preped" formatted files with the utility ^inprep^.


Options
-------

^saving^  a filename for saving the generated case-control dataset

^replace^ necessary if an existing file is to be overwritten

^ped^	  variable containing pedigree id (default is 1st variable)

^id^	  variable containing pedigree member id (default is 2nd variable)

^father^  variable containing id of father (default is 3rd variable)

^mother^  variable containing id of mother (default is 4th variable)

^sex^     variable containing sex of subject (default is 5th variable)

^affect^  variable indicating affected or not (default is 6th variable)

^acode^	  the code(s) indicating an affected individual (default is 2)

^mvar^    variables to be copied over from the mother's record. If a new 
          variable name is not specified, the prefix M_ is added to the 
          original variable name

^mgen^    copy mother's genotype into case & pseudo-control records. The 
          prefix M_ is added to the original variable names 

^fvar^    variables to be copied over from the father's record. If a new 
          variable name is not specified, the prefix F_ is added to the 
          original variable name

^fgen^    copy father's genotype into case & pseudo-control records. The 
          prefix F_ is added to the original variable names 

^keep^    variables to be carried over from the affected offspring to all
          pseudo-controls

^phase^	  the output file is to contain only phase-resolved haplotypes. 

^porigin^ resolve parent-of-origin of all alleles. The first allele of each 
	  pair will be the maternal allele and the second the  paternal. 
	  Note that this option also implies that phase is resolved, but the
	  reverse does not hold --- sometimes phase may be resolved  without 
	  resolving parent-of-origin. 

^one^	  only one pseudo-control is generated, made up from non-transmitted 
	  alleles at each locus. This behaviour is forced, even if two or 
	  three pseudo-controls could have been constructed (but see ^exch^)

^three^	  only case-control sets in which all three pseudo-controls could be
          constructed are saved (but see ^exch^)

^exch^    parental genotypes are exchangeable. This option also implies ^porigin^
          option to be set. When ^exch^ is in force, up to four additional 
	  controls are generated, representing the possible offspring when
	  parental genotypes are exchanged. With this option, the ^one^ option 
	  forces three pseudo-controls for each case, while the ^three^ option 
	  forces seven controls per case. Note that parental genotypes are also
          exchanged in the additional pseudo-controls when the ^mgen^ and/or 
          ^fgen^ option is set. However values of variables copied over by 
          using the ^mvar^ and ^fvar^ options are not exchanged

^first^   Only the first eligible case-control set from any one pedigree is
          saved

^nowarn^  turns of warning messages listing misinheritances etc.


Output case-control dataset
---------------------------

The first four variables reproduce the identification information for the 
affected offspring around whom the case-control set is built (pedigree, member,
father, and mother identifiers). The variable ^set^ identifies case-control 
pairings (this variable should be declared in the ^group^ option of ^clogit^).
The variable ^case^ is a 1/0 variable differentiating the case from the 
control(s) in each set (the dependent variable for ^clogit^). The remaining 
variables are the alleles at  each locus, plus any variables copied over 
from the parents or from the affected offspring

When parent-of-origin of alleles is required, the case or pseudo-control 
genotypes are coded with the maternal allele in the first variable and the 
paternal allele in the second. 


Examples
--------

. pseudocc a_1 a_2 b_1 b_2 c_1 c_2, saving(casecon) replace phase


See Also
--------

^tdt^, ^gtrr^, ^inprep^, ^clogit^


Author
------

David Clayton

Diabetes and Inflammation Laboratory		Tel: 44 (0)1223 762669 
Cambridge Institute for Medical Research	Fax: 44 (0)1223 762102
Wellcome Trust/MRC Building			david.clayton@cimr.cam.ac.uk
Addenbrooke's Hospital, Cambridge, CB2 2XY	www-gene.cimr.cam.ac.uk/clayton


